--- dvbhdhomerun-vanilla/userhdhomerun//hdhomerun_control.cpp	2012-06-26 19:57:52.000000000 +0100
+++ dvbhdhomerun-0.0.10/userhdhomerun//hdhomerun_control.cpp	2012-06-26 20:22:45.000000000 +0100
@@ -30,6 +30,7 @@
 #include <sys/ioctl.h>
 
 #include <iostream>
+#include <algorithm>
 
 using namespace std;
 
@@ -42,55 +43,66 @@
      ERR() << "Couldn't open: " << m_device_name << endl;
     _exit(-1);
   }
+  pipe(pfd);
 }
 
 Control::~Control()
 {
   m_write.close();
+  close(pfd[0]);
 }
 
 void Control::run()
 {
-   m_read.open(m_device_name.c_str(), ios::binary);
-   if(!m_read) {
-      ERR() << "Couldn't open: " << m_device_name << endl;
-      _exit(-1);
-   }
-      
-   while(!m_stop) {
-      while(!m_read.eof()) {
-         struct dvbhdhomerun_control_mesg mesg;
-      
-         m_read.read( (char*)&mesg, sizeof(dvbhdhomerun_control_mesg));
-         if(m_read.fail() && !m_read.eof()) {
-            ERR() << "Error FAIL reading data from " << m_device_name << endl;
-         }
-         if(m_read.bad()) {
-            ERR() << "Error BAD reading data from " << m_device_name << endl;
-         }
-      
-         if(m_read.gcount() > 0) {
-            //LOG() << "Read " << m_read.gcount() << " bytes, expected " << sizeof(dvbhdhomerun_control_mesg) << endl;
-            if(m_read.gcount() < sizeof(dvbhdhomerun_control_mesg)) {
-               ERR() << "FAIL! We didn't receive enough bytes from the device driver!" << endl;
-               _exit(-1);
-            }
-	
-            m_messages.push(mesg);
-         }
-      }      
-    
-      if(m_messages.size() > 0) {
-         this->ProcessMessages();
-      }
-    
-      m_read.clear();
-
-      //this->sleep(1);
-      usleep(10000);
-   }
+	fd_set fds;
+	int highfd, r;
+	char buf[8];
+
+	m_read = open(m_device_name.c_str(), O_RDONLY);
+	if (m_read < 0) {
+		ERR() << "Couldn't open: " << m_device_name << endl;
+		_exit(-1);
+	}
+
+	while (1) {
+		struct dvbhdhomerun_control_mesg mesg;
+		FD_ZERO(&fds);
+		FD_SET(pfd[0], &fds);
+		FD_SET(m_read, &fds);
+		highfd = std::max(pfd[0], m_read);
+
+		r = select(highfd + 1, &fds, NULL, NULL, NULL);
+
+		if (r == -1 && errno == EINTR)
+			continue;
+
+		if (r == -1) {
+			ERR() << "select() failure" << endl;
+			_exit(-1);
+		}
+
+		if (FD_ISSET(pfd[0], &fds)) {
+			if ( read(pfd[0], buf, sizeof(buf)) == 0) { /* it ain't gonna be anything else... */
+				break;
+			}
+		}
+
+		if (FD_ISSET(m_read, &fds)) {
+			r = read(m_read, (char*)&mesg, sizeof(dvbhdhomerun_control_mesg));
+			if ( r <= 0 ) {
+				ERR() << "read failure - errno: " << r <<  endl;
+				_exit(-1);
+			} else {
+				m_messages.push(mesg);
+			}
+		}
 
-   m_read.close();
+		if(m_messages.size() > 0)
+			this->ProcessMessages();
+
+	}
+
+	close(m_read);
 }
 
 
@@ -293,3 +305,10 @@
 
   this->WriteToDevice(_mesg);
 }
+
+void Control::pre_stop()
+{
+	close(pfd[1]);
+	return;
+}
+
diff -ur dvbhdhomerun-vanilla/userhdhomerun//hdhomerun_control.h dvbhdhomerun-0.0.10/userhdhomerun//hdhomerun_control.h
--- dvbhdhomerun-vanilla/userhdhomerun//hdhomerun_control.h	2012-06-26 19:57:52.000000000 +0100
+++ dvbhdhomerun-0.0.10/userhdhomerun//hdhomerun_control.h	2012-06-26 19:54:10.000000000 +0100
@@ -37,7 +37,7 @@
   ~Control();
   
   void run();
-
+  void pre_stop();
    bool Ioctl(int _numOfTuners, const std::string& _name, int& _id, int type, bool _useFullName);
 
  private:
@@ -58,8 +58,9 @@
   void WriteToDevice(const struct dvbhdhomerun_control_mesg& mesg);
 
  private:
-  std::ifstream m_read;
   std::ofstream m_write;
+  int m_read;
+  int pfd[2];
   int m_fdIoctl;
 
   std::queue<dvbhdhomerun_control_mesg> m_messages;
diff -ur dvbhdhomerun-vanilla/userhdhomerun//thread_pthread.cpp dvbhdhomerun-0.0.10/userhdhomerun//thread_pthread.cpp
--- dvbhdhomerun-vanilla/userhdhomerun//thread_pthread.cpp	2012-06-26 19:57:52.000000000 +0100
+++ dvbhdhomerun-0.0.10/userhdhomerun//thread_pthread.cpp	2012-06-26 03:42:30.000000000 +0100
@@ -26,6 +26,7 @@
 void ThreadPthread::stop()
 {
   m_stop = true;
+  pre_stop();
   while(m_running)
   {
     usleep(100000);
diff -ur dvbhdhomerun-vanilla/userhdhomerun//thread_pthread.h dvbhdhomerun-0.0.10/userhdhomerun//thread_pthread.h
--- dvbhdhomerun-vanilla/userhdhomerun//thread_pthread.h	2012-06-26 19:57:52.000000000 +0100
+++ dvbhdhomerun-0.0.10/userhdhomerun//thread_pthread.h	2012-06-25 17:29:59.000000000 +0100
@@ -14,6 +14,7 @@
 
 protected:
   virtual void run() = 0;
+  virtual void pre_stop() { return; };
 
 protected:
   bool m_stop;
